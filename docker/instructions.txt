##################################################################
# Composition
##################################################################

4 containers :

    - mongodb
        * Données dynamiques base de données MongoDB

    - mysql
        * Données statiques base de données MySQL

    - Airflow
        * Appels aux API 
            * OpenSky : toutes les 5 min
            * Airlabs : toutes les heures
        * Opérations sur les data :
            * Insert des data statistiques à l'initialisation de la base de données
            * Aggrégation 1 fois par jour des données
            * suppression des données de plus de 7 jours

    - dash
        * dashbord de l'application


##################################################################
# Structure des fichiers à respecter
##################################################################

    │   .dockerignore
    │   .env
    │   docker-compose.yaml
    │   setup.sh
    |
    ├───airflow
    │   │   .env
    │   │
    │   ├───dags
    │   │       my_dag.py
    │   │
    │   ├───functions
    │   │       clean_mongodb.py
    │   │       connection_mongodb.py
    │   │       cron_airlabs.py
    │   │       cron_opensky.py
    │   │       init_mongo.py
    │   │       pipeline_aggregate.py
    │   │       utilities_live_api.py
    │   │
    │   ├───logs
    │   └───plugins
    |
    ├───data_statistics
    │       data.json
    │
    └───init_mongodb
            mongo-init.js


##################################################################
# Fichier .env.example
##################################################################

Présence d'un fichier d'exemple pour définir votre fichier .env

    * ensemble des variables d'environnement à définir OBLIGATOIREMENT
    * modifier les valeurs illustratives par les valeur réelles
    * renommer le fichier en .env

Remarque :

    * un fichier .env est aussi présent dans le dossier Airflow 
    * usage interne - ne rien écrire dessus


##################################################################
# Usage
##################################################################

    * Se placer dans le dossier où se trouve le docker-compose.yaml

    * Lancer la commande suivante pour lancer le script automatiquement :
    ATTENTION : cela supprimera les containers, images et volumes présents sur votre machine
        sh ./setup.sh 

    Si vous préférez lancer les containers manuellement, les 2 commandes 
    obligatoires sont les suivantes : 
        docker-compose up airflow-init 
        docker-compose up -d 

    * Accès à l'interface graphique d'airflow pour gérer vos DAG :
        localhost:8080  
